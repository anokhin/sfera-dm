points(abs(max(df$x[which(df$label == 1)]))/4, b, col = 'red', pch = 17)
legend('topleft', c('class 0', 'class 1', 'decision boundary', 'error 1', 'error 2'),
lwd = c(NA, NA, 3, NA, NA), lty = c(NA, NA, 3, NA, NA), pch = c(19, 19, NA, 17, 17),
col=c('red', 'blue', 'darkgreen', 'red', 'blue'))
rm(list = ls())
library(scales)
df_sd <- 0.3
df <- data.frame(
x = c(rnorm(25, -1, df_sd), rnorm(25, 1, df_sd)),
y = c(rnorm(25, -1, df_sd), rnorm(25, 1, df_sd)),
label = c(rep(0, 25), rep(1, 25))
)
plot(df$x, df$y,
col = c(alpha('red', 0.7), alpha('blue', 0.7))[df$label + 1], pch = 19,
main = 'Two types of error')
fit <- lm(label ~ ., data = df)
k <- -fit$coefficients[2]/fit$coefficients[3]
b <- -fit$coefficients[1]/fit$coefficients[3] + 1
abline(a = b, b = k,
col = 'darkgreen', lwd = 3, lty = 2)
points(-abs(min(df$x[which(df$label == 0)]))/4, b, col = 'blue', pch = 17)
points(abs(max(df$x[which(df$label == 1)]))/4, b, col = 'red', pch = 17)
legend('topleft', c('class 0', 'class 1', 'decision boundary', 'error 1', 'error 2'),
lwd = c(NA, NA, 3, NA, NA), lty = c(NA, NA, 3, NA, NA), pch = c(19, 19, NA, 17, 17),
col=c('red', 'blue', 'darkgreen', 'red', 'blue'))
rm(list = ls())
library(scales)
df_sd <- 0.3
df <- data.frame(
x = c(rnorm(25, -1, df_sd), rnorm(25, 1, df_sd)),
y = c(rnorm(25, -1, df_sd), rnorm(25, 1, df_sd)),
label = c(rep(0, 25), rep(1, 25))
)
plot(df$x, df$y,
col = c(alpha('red', 0.7), alpha('blue', 0.7))[df$label + 1], pch = 19,
main = 'Two types of error')
fit <- lm(label ~ ., data = df)
k <- -fit$coefficients[2]/fit$coefficients[3]
b <- -fit$coefficients[1]
abline(a = b, b = k,
col = 'darkgreen', lwd = 3, lty = 2)
points(-abs(min(df$x[which(df$label == 0)]))/4, b, col = 'blue', pch = 17)
points(abs(max(df$x[which(df$label == 1)]))/4, b, col = 'red', pch = 17)
legend('topleft', c('class 0', 'class 1', 'decision boundary', 'error 1', 'error 2'),
lwd = c(NA, NA, 3, NA, NA), lty = c(NA, NA, 3, NA, NA), pch = c(19, 19, NA, 17, 17),
col=c('red', 'blue', 'darkgreen', 'red', 'blue'))
rm(list = ls())
library(scales)
df_sd <- 0.3
df <- data.frame(
x = c(rnorm(25, -1, df_sd), rnorm(25, 1, df_sd)),
y = c(rnorm(25, -1, df_sd), rnorm(25, 1, df_sd)),
label = c(rep(0, 25), rep(1, 25))
)
plot(df$x, df$y,
col = c(alpha('red', 0.7), alpha('blue', 0.7))[df$label + 1], pch = 19,
main = 'Two types of error')
fit <- lm(label ~ ., data = df)
k <- -fit$coefficients[2]/fit$coefficients[3]
b <- -fit$coefficients[1]
abline(a = b, b = k,
col = 'darkgreen', lwd = 3, lty = 2)
points(-abs(min(df$x[which(df$label == 0)]))/4, b, col = 'blue', pch = 17)
points(abs(max(df$x[which(df$label == 1)]))/4, b, col = 'red', pch = 17)
legend('topleft', c('class 0', 'class 1', 'decision boundary', 'error 1', 'error 2'),
lwd = c(NA, NA, 3, NA, NA), lty = c(NA, NA, 3, NA, NA), pch = c(19, 19, NA, 17, 17),
col=c('red', 'blue', 'darkgreen', 'red', 'blue'))
rm(list = ls())
library(scales)
df_sd <- 0.1
n <- 25
df <- data.frame(
x = c(rnorm(n, 0, df_sd), rnorm(n, 0, df_sd), rnorm(n, 1, df_sd), rnorm(n, 1, df_sd)),
y = c(rnorm(n, 0, df_sd), rnorm(n, 1, df_sd), rnorm(n, 0, df_sd), rnorm(n, 1, df_sd)),
label = c(rep(0, 3*n), rep(1, n)))
plot(df$x, df$y,
col = c(alpha('red', 0.7), alpha('blue', 0.7))[df$label + 1], pch = 19,
main = 'Noised OR operation')
fit <- lm(label ~ ., data = df)
k <- -fit$coefficients[2]/fit$coefficients[3]
b <- -fit$coefficients[1]/fit$coefficients[3]
abline(a = b, b = k,
col = 'darkgreen', lwd = 3, lty = 2)
rm(list = ls())
library(scales)
df_sd <- 0.1
n <- 25
df <- data.frame(
x = c(rnorm(n, 0, df_sd), rnorm(n, 0, df_sd), rnorm(n, 1, df_sd), rnorm(n, 1, df_sd)),
y = c(rnorm(n, 0, df_sd), rnorm(n, 1, df_sd), rnorm(n, 0, df_sd), rnorm(n, 1, df_sd)),
label = c(rep(-1, 3*n), rep(1, n)))
plot(df$x, df$y,
col = c(alpha('red', 0.7), alpha('blue', 0.7))[df$label + 1], pch = 19,
main = 'Noised OR operation')
fit <- lm(label ~ ., data = df)
k <- -fit$coefficients[2]/fit$coefficients[3]
b <- -fit$coefficients[1]/fit$coefficients[3]
abline(a = b, b = k,
col = 'darkgreen', lwd = 3, lty = 2)
rm(list = ls())
library(scales)
df_sd <- 0.1
n <- 25
df <- data.frame(
x = c(rnorm(n, 0, df_sd), rnorm(n, 0, df_sd), rnorm(n, 1, df_sd), rnorm(n, 1, df_sd)),
y = c(rnorm(n, 0, df_sd), rnorm(n, 1, df_sd), rnorm(n, 0, df_sd), rnorm(n, 1, df_sd)),
label = c(rep(-1, 3*n), rep(1, n)))
plot(df$x, df$y,
col = c(alpha('red', 0.7), alpha('blue', 0.7))[df$label + 1], pch = 19,
main = 'Noised OR operation')
fit <- lm(label ~ ., data = df)
k <- -fit$coefficients[2]/fit$coefficients[3]
b <- -fit$coefficients[1]/fit$coefficients[3]
abline(a = b, b = k,
col = 'darkgreen', lwd = 3, lty = 2)
rm(list = ls())
library(scales)
df_sd <- 0.1
n <- 25
df <- data.frame(
x = c(rnorm(n, 0, df_sd), rnorm(n, 0, df_sd), rnorm(n, 1, df_sd), rnorm(n, 1, df_sd)),
y = c(rnorm(n, 0, df_sd), rnorm(n, 1, df_sd), rnorm(n, 0, df_sd), rnorm(n, 1, df_sd)),
label = c(rep(0, 3*n), rep(1, n)))
plot(df$x, df$y,
col = c(alpha('red', 0.7), alpha('blue', 0.7))[df$label + 1], pch = 19,
main = 'Noised OR operation')
fit <- lm(label ~ ., data = df)
k <- -fit$coefficients[2]/fit$coefficients[3]
b <- -fit$coefficients[1]/fit$coefficients[3]
abline(a = b, b = k,
col = 'darkgreen', lwd = 3, lty = 2)
rm(list = ls())
library(scales)
df_sd <- 0.1
n <- 25
df <- data.frame(
x = c(rnorm(n, 0, df_sd), rnorm(n, 0, df_sd), rnorm(n, 1, df_sd), rnorm(n, 1, df_sd)),
y = c(rnorm(n, 0, df_sd), rnorm(n, 1, df_sd), rnorm(n, 0, df_sd), rnorm(n, 1, df_sd)),
label = c(rep(0, 3*n), rep(1, n)))
plot(df$x, df$y,
col = c(alpha('red', 0.7), alpha('blue', 0.7))[df$label + 1], pch = 19,
main = 'Noised OR operation')
fit <- lm(label ~ ., data = df)
k <- -fit$coefficients[2]/fit$coefficients[3]
b <- -fit$coefficients[1]
abline(a = b, b = k,
col = 'darkgreen', lwd = 3, lty = 2)
rm(list = ls())
library(scales)
df_sd <- 0.1
n <- 25
df <- data.frame(
x = c(rnorm(n, 0, df_sd), rnorm(n, 0, df_sd), rnorm(n, 1, df_sd), rnorm(n, 1, df_sd)),
y = c(rnorm(n, 0, df_sd), rnorm(n, 1, df_sd), rnorm(n, 0, df_sd), rnorm(n, 1, df_sd)),
label = c(rep(0, 3*n), rep(1, n)))
plot(df$x, df$y,
col = c(alpha('red', 0.7), alpha('blue', 0.7))[df$label + 1], pch = 19,
main = 'Noised OR operation')
fit <- lm(label ~ ., data = df)
k <- -fit$coefficients[2]/fit$coefficients[3]
b <- -fit$coefficients[1]
abline(a = b, b = k,
col = 'darkgreen', lwd = 3, lty = 2)
rm(list = ls())
library(scales)
df_sd <- 0.1
n <- 25
df <- data.frame(
x = c(rnorm(n, 0, df_sd), rnorm(n, 0, df_sd), rnorm(n, 1, df_sd), rnorm(n, 1, df_sd)),
y = c(rnorm(n, 0, df_sd), rnorm(n, 1, df_sd), rnorm(n, 0, df_sd), rnorm(n, 1, df_sd)),
label = c(rep(0, 3*n), rep(1, n)))
plot(df$x, df$y,
col = c(alpha('red', 0.7), alpha('blue', 0.7))[df$label + 1], pch = 19,
main = 'Noised OR operation')
fit <- lm(label ~ ., data = df)
k <- -fit$coefficients[2]/fit$coefficients[3]
b <- -fit$coefficients[1]
abline(a = b, b = k,
col = 'darkgreen', lwd = 3, lty = 2)
/fit$coefficients[3]
rm(list = ls())
library(scales)
df_sd <- 0.1
n <- 25
df <- data.frame(
x = c(rnorm(n, 0, df_sd), rnorm(n, 0, df_sd), rnorm(n, 1, df_sd), rnorm(n, 1, df_sd)),
y = c(rnorm(n, 0, df_sd), rnorm(n, 1, df_sd), rnorm(n, 0, df_sd), rnorm(n, 1, df_sd)),
label = c(rep(0, 3*n), rep(1, n)))
plot(df$x, df$y,
col = c(alpha('red', 0.7), alpha('blue', 0.7))[df$label + 1], pch = 19,
main = 'Noised OR operation')
fit <- lm(label ~ ., data = df)
k <- -fit$coefficients[2]/fit$coefficients[3]
b <- -fit$coefficients[1]/fit$coefficients[3]
abline(a = b, b = k,
col = 'darkgreen', lwd = 3, lty = 2)
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
fit
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
?abline
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
?lines
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
fit
?lm
rm(list = ls())
library(scales)
df_sd <- 0.1
n <- 25
df <- data.frame(
x = c(rnorm(n, 0, df_sd), rnorm(n, 0, df_sd), rnorm(n, 1, df_sd), rnorm(n, 1, df_sd)),
y = c(rnorm(n, 0, df_sd), rnorm(n, 1, df_sd), rnorm(n, 0, df_sd), rnorm(n, 1, df_sd)),
label = c(rep(0, 3*n), rep(1, n)))
plot(df$x, df$y,
col = c(alpha('red', 0.7), alpha('blue', 0.7))[df$label + 1], pch = 19,
main = 'Noised AND operation')
fit <- lm(label ~ ., data = df)
k <- -fit$coefficients[2]/fit$coefficients[3]
b <- -fit$coefficients[1]/fit$coefficients[3] + 1
abline(a = b, b = k,
col = 'darkgreen', lwd = 3, lty = 2)
rm(list = ls())
library(scales)
df_sd <- 0.3
df <- data.frame(
x = c(rnorm(25, -1, df_sd), rnorm(25, 1, df_sd)),
y = c(rnorm(25, -1, df_sd), rnorm(25, 1, df_sd)),
label = c(rep(0, 25), rep(1, 25))
)
plot(df$x, df$y,
col = c(alpha('red', 0.7), alpha('blue', 0.7))[df$label + 1], pch = 19,
main = 'Two types of error')
fit <- lm(label ~ ., data = df)
k <- -fit$coefficients[2]/fit$coefficients[3]
b <- -fit$coefficients[1]/fit$coefficients[3] + 1
abline(a = b, b = k,
col = 'darkgreen', lwd = 3, lty = 2)
points(-abs(min(df$x[which(df$label == 0)]))/4, b, col = 'blue', pch = 17)
points(abs(max(df$x[which(df$label == 1)]))/4, b, col = 'red', pch = 17)
legend('topleft', c('class 0', 'class 1', 'decision boundary', 'error 1', 'error 2'),
lwd = c(NA, NA, 3, NA, NA), lty = c(NA, NA, 3, NA, NA), pch = c(19, 19, NA, 17, 17),
col=c('red', 'blue', 'darkgreen', 'red', 'blue'))
rm(list = ls())
library(scales)
df_sd <- 0.3
df <- data.frame(
x = c(rnorm(25, -1, df_sd), rnorm(25, 1, df_sd)),
y = c(rnorm(25, -1, df_sd), rnorm(25, 1, df_sd)),
label = c(rep(0, 25), rep(1, 25))
)
plot(df$x, df$y,
col = c(alpha('red', 0.7), alpha('blue', 0.7))[df$label + 1], pch = 19,
main = 'Two types of error')
fit <- lm(label ~ ., data = df)
k <- -fit$coefficients[2]/fit$coefficients[3]
b <- -fit$coefficients[1]/fit$coefficients[3] + 1
abline(a = b, b = k,
col = 'darkgreen', lwd = 3, lty = 2)
points(-abs(min(df$x[which(df$label == 0)]))/4, b, col = 'blue', pch = 17)
points(abs(max(df$x[which(df$label == 1)]))/4, b, col = 'red', pch = 17)
legend('topleft', c('class 0', 'class 1', 'decision boundary', 'error 1', 'error 2'),
lwd = c(NA, NA, 3, NA, NA), lty = c(NA, NA, 3, NA, NA), pch = c(19, 19, NA, 17, 17),
col=c('red', 'blue', 'darkgreen', 'red', 'blue'))
rm(list = ls())
library(scales)
df_sd <- 0.3
df <- data.frame(
x = c(rnorm(25, -1, df_sd), rnorm(25, 1, df_sd)),
y = c(rnorm(25, -1, df_sd), rnorm(25, 1, df_sd)),
label = c(rep(0, 25), rep(1, 25))
)
plot(df$x, df$y,
col = c(alpha('red', 0.7), alpha('blue', 0.7))[df$label + 1], pch = 19,
main = 'Two types of error')
fit <- lm(label ~ ., data = df)
k <- -fit$coefficients[2]/fit$coefficients[3]
b <- -fit$coefficients[1]/fit$coefficients[3] + 1
abline(a = b, b = k,
col = 'darkgreen', lwd = 3, lty = 2)
points(-abs(min(df$x[which(df$label == 0)]))/4, b, col = 'blue', pch = 17)
points(abs(max(df$x[which(df$label == 1)]))/4, b, col = 'red', pch = 17)
legend('topleft', c('class 0', 'class 1', 'decision boundary', 'error 1', 'error 2'),
lwd = c(NA, NA, 3, NA, NA), lty = c(NA, NA, 3, NA, NA), pch = c(19, 19, NA, 17, 17),
col=c('red', 'blue', 'darkgreen', 'red', 'blue'))
rm(list = ls())
library(scales)
df_sd <- 0.3
df <- data.frame(
x = c(rnorm(25, -1, df_sd), rnorm(25, 1, df_sd)),
y = c(rnorm(25, -1, df_sd), rnorm(25, 1, df_sd)),
label = c(rep(0, 25), rep(1, 25))
)
plot(df$x, df$y,
col = c(alpha('red', 0.7), alpha('blue', 0.7))[df$label + 1], pch = 19,
main = 'Two types of error')
fit <- lm(label ~ ., data = df)
k <- -fit$coefficients[2]/fit$coefficients[3]
b <- -fit$coefficients[1]/fit$coefficients[3] + 1
abline(a = b, b = k,
col = 'darkgreen', lwd = 3, lty = 2)
points(-abs(min(df$x[which(df$label == 0)]))/4, b, col = 'blue', pch = 17)
points(abs(max(df$x[which(df$label == 1)]))/4, b, col = 'red', pch = 17)
legend('topleft', c('class 0', 'class 1', 'decision boundary', 'error 1', 'error 2'),
lwd = c(NA, NA, 3, NA, NA), lty = c(NA, NA, 3, NA, NA), pch = c(19, 19, NA, 17, 17),
col=c('red', 'blue', 'darkgreen', 'red', 'blue'))
rm(list = ls())
library(scales)
df_sd <- 0.3
df <- data.frame(
x = c(rnorm(25, -1, df_sd), rnorm(25, 1, df_sd)),
y = c(rnorm(25, -1, df_sd), rnorm(25, 1, df_sd)),
label = c(rep(0, 25), rep(1, 25))
)
plot(df$x, df$y,
col = c(alpha('red', 0.7), alpha('blue', 0.7))[df$label + 1], pch = 19,
main = 'Two types of error')
fit <- lm(label ~ ., data = df)
k <- -fit$coefficients[2]/fit$coefficients[3]
b <- -fit$coefficients[1]/fit$coefficients[3] + 1
abline(a = b, b = k,
col = 'darkgreen', lwd = 3, lty = 2)
points(-abs(min(df$x[which(df$label == 0)]))/4, b, col = 'blue', pch = 17)
points(abs(max(df$x[which(df$label == 1)]))/4, b, col = 'red', pch = 17)
legend('topleft', c('class 0', 'class 1', 'decision boundary', 'error 1', 'error 2'),
lwd = c(NA, NA, 3, NA, NA), lty = c(NA, NA, 3, NA, NA), pch = c(19, 19, NA, 17, 17),
col=c('red', 'blue', 'darkgreen', 'red', 'blue'))
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
rm(list = ls())
library(scales)
df_sd <- 0.3
df <- data.frame(
x = c(rnorm(25, -1, df_sd), rnorm(25, 1, df_sd)),
y = c(rnorm(25, -1, df_sd), rnorm(25, 1, df_sd)),
label = c(rep(-1, 25), rep(1, 25))
)
plot(df$x, df$y,
col = c(alpha('red', 0.7), alpha('blue', 0.7))[as.factor(df$label)], pch = 19,
main = 'Two types of error')
fit <- lm(label ~ ., data = df)
k <- -fit$coefficients[2]/fit$coefficients[3]
b <- -fit$coefficients[1]/fit$coefficients[3]
abline(a = b, b = k,
col = 'darkgreen', lwd = 3, lty = 2)
rm(list = ls())
library(scales)
df_sd <- 0.3
df <- data.frame(
x = c(rnorm(25, -1, df_sd), rnorm(25, 1, df_sd)),
y = c(rnorm(25, -1, df_sd), rnorm(25, 1, df_sd)),
label = c(rep(-1, 25), rep(1, 25))
)
plot(df$x, df$y,
col = c(alpha('red', 0.7), alpha('blue', 0.7))[as.factor(df$label)], pch = 19,
main = 'Two types of error')
fit <- lm(label ~ ., data = df)
k <- -fit$coefficients[2]/fit$coefficients[3]
b <- -fit$coefficients[1]/fit$coefficients[3]
abline(a = b, b = k,
col = 'darkgreen', lwd = 3, lty = 2)
points(-abs(min(df$x[which(df$label == -1)]))/4, b, col = 'blue', pch = 17)
points(abs(max(df$x[which(df$label == 1)]))/4, b, col = 'red', pch = 17)
legend('topleft', c('class 0', 'class 1', 'decision boundary', 'error 1', 'error 2'),
lwd = c(NA, NA, 3, NA, NA), lty = c(NA, NA, 3, NA, NA), pch = c(19, 19, NA, 17, 17),
col=c('red', 'blue', 'darkgreen', 'red', 'blue'))
rm(list = ls())
library(scales)
df_sd <- 0.3
df <- data.frame(
x = c(rnorm(25, -1, df_sd), rnorm(25, 1, df_sd)),
y = c(rnorm(25, -1, df_sd), rnorm(25, 1, df_sd)),
label = c(rep(-1, 25), rep(1, 25))
)
plot(df$x, df$y,
col = c(alpha('red', 0.7), alpha('blue', 0.7))[as.factor(df$label)], pch = 19,
main = 'Two types of error')
fit <- lm(label ~ ., data = df)
k <- -fit$coefficients[2]/fit$coefficients[3]
b <- -fit$coefficients[1]/fit$coefficients[3]
abline(a = b, b = k,
col = 'darkgreen', lwd = 3, lty = 2)
points(-abs(min(df$x[which(df$label == -1)]))/4, b, col = 'blue', pch = 17)
points(abs(max(df$x[which(df$label == 1)]))/4, b, col = 'red', pch = 17)
legend('topleft', c('class 0', 'class 1', 'decision boundary', 'error 1', 'error 2'),
lwd = c(NA, NA, 3, NA, NA), lty = c(NA, NA, 3, NA, NA), pch = c(19, 19, NA, 17, 17),
col=c('red', 'blue', 'darkgreen', 'red', 'blue'))
rm(list = ls())
library(scales)
df_sd <- 0.3
df <- data.frame(
x = c(rnorm(25, -1, df_sd), rnorm(25, 1, df_sd)),
y = c(rnorm(25, -1, df_sd), rnorm(25, 1, df_sd)),
label = c(rep(-1, 25), rep(1, 25))
)
plot(df$x, df$y,
col = c(alpha('red', 0.7), alpha('blue', 0.7))[as.factor(df$label)], pch = 19,
main = 'Two types of error')
fit <- lm(label ~ ., data = df)
k <- -fit$coefficients[2]/fit$coefficients[3]
b <- -fit$coefficients[1]/fit$coefficients[3]
abline(a = b, b = k,
col = 'darkgreen', lwd = 3, lty = 2)
points(-abs(min(df$x[which(df$label == -1)]))/4, b, col = 'blue', pch = 17)
points(abs(max(df$x[which(df$label == 1)]))/4, b, col = 'red', pch = 17)
legend('topleft', c('class 0', 'class 1', 'decision boundary', 'error 1', 'error 2'),
lwd = c(NA, NA, 3, NA, NA), lty = c(NA, NA, 3, NA, NA), pch = c(19, 19, NA, 17, 17),
col=c('red', 'blue', 'darkgreen', 'red', 'blue'))
rm(list = ls())
library(scales)
df_sd <- 0.1
n <- 25
df <- data.frame(
x = c(rnorm(n, 0, df_sd), rnorm(n, 0, df_sd), rnorm(n, 1, df_sd), rnorm(n, 1, df_sd)),
y = c(rnorm(n, 0, df_sd), rnorm(n, 1, df_sd), rnorm(n, 0, df_sd), rnorm(n, 1, df_sd)),
label = c(rep(-1, 3*n), rep(1, n)))
plot(df$x, df$y,
col = c(alpha('red', 0.7), alpha('blue', 0.7))[as.factor(df$label)], pch = 19,
main = 'Noised AND operation')
fit <- lm(label ~ ., data = df)
k <- -fit$coefficients[2]/fit$coefficients[3]
b <- -fit$coefficients[1]/fit$coefficients[3]
abline(a = b, b = k,
col = 'darkgreen', lwd = 3, lty = 2)
rm(list = ls())
library(scales)
df_sd <- 0.1
n <- 25
df <- data.frame(
x = c(rnorm(n, 0, df_sd), rnorm(n, 0, df_sd), rnorm(n, 1, df_sd), rnorm(n, 1, df_sd)),
y = c(rnorm(n, 0, df_sd), rnorm(n, 1, df_sd), rnorm(n, 0, df_sd), rnorm(n, 1, df_sd)),
label = c(rep(-1, 3*n), rep(1, n)))
plot(df$x, df$y,
col = c(alpha('red', 0.7), alpha('blue', 0.7))[as.factor(df$label)], pch = 19,
main = 'Noised AND operation')
fit <- lm(label ~ ., data = df)
k <- -fit$coefficients[2]/fit$coefficients[3]
b <- -fit$coefficients[1]/fit$coefficients[3]
abline(a = b, b = k,
col = 'darkgreen', lwd = 3, lty = 2)
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
df_xor <- data.frame(
x = c(rnorm(n, 0, df_sd), rnorm(n, 0, df_sd), rnorm(n, 1, df_sd), rnorm(n, 1, df_sd)),
y = c(rnorm(n, 0, df_sd), rnorm(n, 1, df_sd), rnorm(n, 0, df_sd), rnorm(n, 1, df_sd)),
label = c(rep(0, n), rep(1, n), rep(1, n), rep(0, n)))
plot(df_xor$x, df_xor$y,
col = c(alpha('red', 0.7), alpha('blue', 0.7))[as.factor(df_xor$label)], pch = 19,
main = 'Noised AND operation')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
source('~/Projects/technosphera/sfera-dm/slides/lecture_n1/rcode/leakage_preceptron.R')
q()
